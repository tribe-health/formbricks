FROM node:20-bookworm-slim

# Enable corepack and install system dependencies for production
RUN corepack enable && apt-get update && apt-get install -y curl \
    && rm -rf /var/lib/apt/lists/* && adduser --system --uid 1001 nextjs

# Set working directory for production
WORKDIR /home/nextjs

# Copy only the necessary build output and configuration for a leaner image
COPY ./apps/web/next.config.mjs /app/apps/web/next.config.mjs .
COPY ./apps/web/package.json /app/apps/web/package.json .
COPY --chown=nextjs:nextjs /Users/gqadonis/Projects/TribeMedia/formbricks/apps/web/.next/standalone ./
COPY --chown=nextjs:nextjs /Users/gqadonis/Projects/TribeMedia/formbricks/apps/web/.next/static ./apps/web/.next/static
COPY --chown=nextjs:nextjs /Users/gqadonis/Projects/TribeMedia/formbricks/apps/web/public ./apps/web/public
COPY --chown=nextjs:nextjs /Users/gqadonis/Projects/TribeMedia/formbricks/packages/database/schema.prisma ./packages/database/schema.prisma
COPY --chown=nextjs:nextjs /Users/gqadonis/Projects/TribeMedia/formbricks/packages/database/package.json ./packages/database/package.json
COPY --chown=nextjs:nextjs /Users/gqadonis/Projects/TribeMedia/formbricks/packages/database/migrations ./packages/database/migrations
COPY /Users/gqadonis/Projects/TribeMedia/formbricks/docker/cronjobs /app/docker/cronjobs

# Install Prisma globally using the version saved during build
RUN npm install -g prisma

# Expose necessary ports and set default environment variables
EXPOSE 3000
ENV HOSTNAME="0.0.0.0"

# Prepare volume for uploads
RUN mkdir -p /home/nextjs/apps/web/uploads/
VOLUME /home/nextjs/apps/web/uploads/

# Start the application with cron jobs and migrations
CMD supercronic -quiet /app/docker/cronjobs & \
    (cd packages/database && npm run db:migrate:deploy) && \
    exec node apps/web/server.js